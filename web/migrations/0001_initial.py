# Generated by Django 4.2.5 on 2023-11-20 00:26

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields
import uuid
import web.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [('main', '0001_initial')]

    operations = [
        migrations.CreateModel(
            name='AvailableSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_stock', models.IntegerField()),
                ('item_code', models.CharField(blank=True, max_length=255, null=True)),
                ('waist', models.CharField(blank=True, max_length=100, null=True)),
                ('rise', models.CharField(blank=True, max_length=100, null=True)),
                ('thighs', models.CharField(blank=True, max_length=100, null=True)),
                ('length', models.CharField(blank=True, max_length=100, null=True)),
                ('inseem_length', models.CharField(blank=True, max_length=100, null=True)),
                ('bottom_size', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Available Size',
                'verbose_name_plural': 'Available Sizes',
                'ordering': ('product',),
            },
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={'verbose_name_plural': 'Badges', 'ordering': ('name',)},
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('email', models.EmailField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('address', models.TextField(max_length=100)),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Disabled Item will not be visible in the website',
                        verbose_name='Mark as Active',
                    ),
                ),
                (
                    'photo',
                    easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='web/branches'),
                ),
                ('is_launched', models.BooleanField(default=True)),
            ],
            options={'verbose_name': 'Branch', 'verbose_name_plural': 'Branches', 'ordering': ('name',)},
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('icon', easy_thumbnails.fields.ThumbnailerImageField(upload_to='web/categories')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Disabled Item will not be visible in the website',
                        verbose_name='Mark as Active',
                    ),
                ),
            ],
            options={'verbose_name_plural': 'Categories', 'ordering': ('name',)},
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'unique_transaction_id',
                    models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True),
                ),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('order_id', models.CharField(default=web.models.generate_order_id, max_length=220)),
                ('session_key', models.CharField(blank=True, max_length=220, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('shipping', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('payable', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_orphan', models.BooleanField(default=True)),
                ('is_ordered', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('address_line_1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address 1')),
                ('address_line_2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address 2')),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=100, null=True)),
                ('alternate_mobile', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('Pending', 'Pending'),
                            ('Placed', 'Order Placed'),
                            ('Shipped', 'Order Shipped'),
                            ('InTransit', 'In Transit'),
                            ('Delivered', 'Order Delivered'),
                            ('Cancelled', 'Order Cancelled'),
                        ],
                        default='Pending',
                        max_length=100,
                    ),
                ),
                (
                    'province',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='main.province',
                        verbose_name='State / Province',
                    ),
                ),
            ],
            options={'ordering': ('-id',)},
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('subtitle', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(upload_to='web/products')),
                (
                    'item_status',
                    models.CharField(
                        choices=[
                            ('Available', 'Available'),
                            ('OutofStock', 'Out of Stock'),
                            ('LaunchingSoon', 'Launching Soon'),
                        ],
                        default='Available',
                        max_length=100,
                    ),
                ),
                (
                    'is_highlited',
                    models.BooleanField(
                        choices=[(True, 'Yes'), (False, 'NO')], default=False, verbose_name='Show in Homepage'
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        choices=[(True, 'Yes'), (False, 'NO')],
                        default=True,
                        help_text='Disabled Item will not be visible in the website',
                        verbose_name='Mark as Active',
                    ),
                ),
                ('priority', models.IntegerField(default=0)),
                (
                    'badge',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.badge'
                    ),
                ),
            ],
            options={'verbose_name_plural': 'Product', 'ordering': ('-priority',)},
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
                ('short_code', models.CharField(max_length=255)),
            ],
            options={'verbose_name': 'Product Size', 'verbose_name_plural': 'Product Sizes', 'ordering': ('name',)},
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'image',
                    easy_thumbnails.fields.ThumbnailerImageField(upload_to='web/sliders', verbose_name='Desktop Image'),
                ),
                (
                    'mini_image',
                    easy_thumbnails.fields.ThumbnailerImageField(upload_to='web/sliders', verbose_name='Mobile Image'),
                ),
                ('button_text', models.CharField(default='Shop Now', max_length=100)),
                ('button_link', models.CharField(default='/products', max_length=100)),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Disabled Item will not be visible in the website',
                        verbose_name='Mark as Active',
                    ),
                ),
                (
                    'text_color',
                    colorfield.fields.ColorField(default='#000', image_field=None, max_length=25, samples=None),
                ),
            ],
            options={'verbose_name': 'Slider', 'verbose_name_plural': 'Sliders', 'ordering': ('name',)},
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'media',
                    models.CharField(
                        choices=[
                            ('lni-behance-original', 'behance'),
                            ('lni-facebook-original', 'facebook'),
                            ('lni-instagram-original', 'instagram'),
                            ('lni-linkedin-original', 'linkedin'),
                            ('lni-paypal-original', 'paypal'),
                            ('lni-spotify-original', 'spotify'),
                            ('lni-telegram-original', 'telegram'),
                            ('lni-twitter-original', 'twitter'),
                        ],
                        max_length=50,
                    ),
                ),
                ('link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Disabled Item will not be visible in the website',
                        verbose_name='Mark as Active',
                    ),
                ),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.category')),
            ],
            options={'verbose_name_plural': 'Sub Categories', 'ordering': ('name',)},
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(upload_to='web/products')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.subcategory'),
        ),
        migrations.CreateModel(
            name='OrderUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.order')),
            ],
            options={'ordering': ('timestamp',)},
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'quantity',
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)],
                        default=1,
                    ),
                ),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.order')),
                (
                    'product_option',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.availablesize'),
                ),
            ],
        ),
        migrations.AddField(
            model_name='availablesize',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.product'),
        ),
        migrations.AddField(
            model_name='availablesize',
            name='size',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.productsize'),
        ),
    ]
